---
title: "Results Text"
format: html
editor: visual
---

## Loading in the Libraries for Everything

```{r}
library(marginaleffects)
library(tidyverse)
library(ggplot2)
library(bbmle) #For ICtab
library(car)
library(ggpubr)
library(ggdist)
library(emmeans)
library(lme4)
library(sjPlot)
library(multcompView)
library(lmtest)
library(nlme)
library(glmmTMB)
library(pwrss)
```

## Functions and Variables

```{r}
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}
round_any <- function(x, accuracy, f=round){f(x/ accuracy) * accuracy}

deg_ang_mean <- function(x){rad2deg(atan2(mean(sin(deg2rad(x))),mean(cos(deg2rad(x)))))}
rad_ang_mean <- function(x){atan2(mean(sin(x)),mean(cos(x)))}

fold_angle_0_360_to_0_180 <- function(x){abs(abs(x-180)-180)}

fold_angle_neg_180_180_to_neg_90_90 <- function(x){ifelse(x > 90,90-abs(90-x),ifelse(x < -90, -90+abs(-90-x), x))}

min_n <- function(x,n){sort(x)[1:n]}
max_n <- function(x,n){sort(x,decreasing = TRUE)[1:n]}

light_no_ab_color = "#9C9C9C"   #"#C62E65" #A1BAA4" #"#d4d7dd" 06D6A0
light_ab_color = "#f5ba9e"
dark_no_ab_color = "#5e94d4"
dark_ab_color = "#49A078"   #"#1E4371"
sim_color = "#777777"

flow_split_still = "#F59DE2"
flow_split_flow = "#5DD492"

dark_split_light = "#5e94d4"
dark_split_dark = "#011627"

tailbeat_len = 19

allowed_flow_type = c("Still Water","Flowing Water (2 BL/s)")

dot_binwidth = 0.03

text_size = 16

# for turning data
x_offset <- 1.95
y_offset <- 1.15

#constrast names

contrast_names <- c("LNCB-LYCB","LNCB-LNGD","LNCB-LYGD","LNCB-LNNT","LNCB-LYNT",
                   "LYCB-LNGD","LYCB-LYGD","LYCB-LNNT","LYCB-LYNT",
                   "LNGD-LYGD","LNGD-LNNT","LNGD-LYNT",
                   "LYGD-LNNT","LYGD-LYNT",
                   "LNNT-LYNT")
```

```{r}

all_fish_comp <- rbind(read.csv("Data/Fish_Comp_Values_3D_Giant Danio.csv"),
                       read.csv("Data/Fish_Comp_Values_3D_Cherry Barb.csv"),
                       read.csv("Data/Fish_Comp_Values_3D_Neon Tetra.csv"))

write.csv(all_fish_comp,"Data/Fish_Comp_Values_3D.csv")

all_fish_comp <- rbind(read.csv("Data/Fish_School_Values_3D_Giant Danio.csv"),
                       read.csv("Data/Fish_School_Values_3D_Cherry Barb.csv"),
                       read.csv("Data/Fish_School_Values_3D_Neon Tetra.csv"))

write.csv(all_fish_comp,"Data/Fish_School_Values_3D.csv")

all_fish_comp <- rbind(read.csv("Data/Fish_Raw_Points_3D_Giant Danio.csv"),
                       read.csv("Data/Fish_Raw_Points_3D_Cherry Barb.csv"),
                       read.csv("Data/Fish_Raw_Points_3D_Neon Tetra.csv"))

write.csv(all_fish_comp,"Data/Fish_Raw_Points_3D.csv")

```

## School Summary Stats

```{r}
school_data <- read.csv("Data/Fish_School_Values_3D.csv")
school_data <- na.omit(school_data)

school_data <- school_data %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           filter(School_Speed <= 5) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Ablation_Species = factor(paste(Ablation,Species,sep="/n"))) %>%
                           mutate(Species = fct_relevel(Species, c("Giant Danio","Cherry Barb", "Neon Tetra"))) %>%
                            
                           # ### Used to remove every third point to reduce autocorrelation
                           mutate(Date = paste(Year,Month,Day,sep="_"),
                                  Date_Trial = paste(Year,Month,Day,Trial,sep="_")) %>%
                           group_by(Date_Trial) %>%
                           ungroup()

table(school_data$Species, school_data$Trial)

all_fish_comp <- read.csv("Data/Fish_Raw_Points_3D.csv") %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Species = fct_relevel(Species, c("Giant Danio","Cherry Barb", "Neon Tetra"))) %>%
                           mutate(Ablation_Species = factor(paste(Ablation,Species,sep="/n")))

#Uncomment with new data, takes a long time to run just for graph edits
# all_fish_comp_groups <- all_fish_comp %>% expand_grid(Group_Dist = seq(5,25,1)) %>%
#                                           group_by(Species, Ablation, Ablation_Species,
#                                                    Year, Month, Day, Trial, Tailbeat, Frame, Group_Dist) %>%
#                                           summarize(n_groups = get_n_groups(Head_X,Head_Y,Head_Z,Group_Dist)) %>%
#                                           ungroup() %>%
#                                           group_by(Species, Ablation, Ablation_Species,
#                                                    Year, Month, Day, Trial, Tailbeat, Group_Dist) %>%
#                                           summarize(Groups = as.integer(mean(n_groups, na.rm = TRUE))) %>%
#                                           ungroup() %>%
# 
#                                            # ### Used to remove every third point to reduce autocorrelation
#                                            filter(Tailbeat %% 3 == 1) %>%
#                                           na.omit()
# saveRDS(all_fish_comp_groups, "all_fish_comp_groups.RDS")

all_fish_comp_groups <- readRDS("all_fish_comp_groups.RDS")


group_sum_data <- all_fish_comp_groups %>% filter(Groups > 0) %>% group_by(Ablation, Species, Groups, Group_Dist) %>%
                            summarise(count = n()) %>%
                            ungroup() %>%
                            mutate(Groups = as.factor(Groups),
                                   Groups = fct_rev(Groups))

group_sum_data_1 <- group_sum_data %>% complete(Species,Ablation,Group_Dist,Groups,fill=list(count=0)) %>%
                                       group_by(Species,Ablation,Group_Dist) %>%
                                       mutate(total = sum(count),
                                              Percent_Group = count / total) %>%
                                       ungroup() %>%
                                       filter(Groups == 1)

group_sum_data_1_binom <- all_fish_comp_groups %>% mutate(Is_One = ifelse(Groups == 1, 1, 0))
```

### Summarize number of tailbeats and trials

```{r}
summaryn <-
  school_data |> 
  group_by(Species, Ablation, Trial) |> 
  summarize(ntailbeat = n()) |> 
  summarize(ntrial = n(),
            mintailbeat = min(ntailbeat),
            meantailbeat = mean(ntailbeat),
            totaltailbeat = sum(ntailbeat))

bind_rows(
  summaryn,

  summaryn |> 
    summarize(ntrial = sum(ntrial),
              totaltailbeat = sum(totaltailbeat))
) |> 
  arrange(Species) |> 
  relocate(totaltailbeat, .before = mintailbeat)
```
```{r}
overalln <- school_data |> 
  group_by(Species, Ablation, Trial) |> 
  summarize(ntailbeat = n(), .groups = 'drop') |> 
  summarize(mintailbeat = min(ntailbeat),
            meantailbeat = mean(ntailbeat),
            maxtailbeat = max(ntailbeat),
            totaltailbeat = sum(ntailbeat))

overalln
```

Since our stats are unbalanced, lets assume the worst case. We have the minimum number of trials, each of which has the minimum number of tail beats across the 3 species and 2 ablation conditions.
```{r}
nmin <- min(summaryn$ntrial) * overalln$mintailbeat * 3 * 2
nmin

nmean <- min(summaryn$ntrial) * overalln$meantailbeat * 3 * 2
nmean

nact <- overalln$totaltailbeat
nact
```

### School Stats Table Here

```{r}

nnd_no_out <- school_data %>% group_by(Ablation,Species) %>%
                              filter(!is.na(NND)) %>%
                              filter(NND >= median(NND, nan.rm=T) - IQR(NND,na.rm =T)*1.5 &
                                     NND <= median(NND, nan.rm=T) + IQR(NND,na.rm =T)*1.5) %>%
                              ungroup()

#nnd_lmer_still <- lm(NND ~ Ablation*Species + Trial, data = school_data)
nnd_lmer_still <- lme(NND ~ Ablation*Species, 
                             random = ~1|Trial/Species,
                             correlation = corAR1(form = ~1|Trial/Species), 
                             data = nnd_no_out)
nnd_s_aov_me <- Anova(nnd_lmer_still, type=c("III"))
em_out <- summary(emmeans(nnd_lmer_still, pairwise ~ Ablation*Species))$contrasts$p.value
names(em_out) <- contrast_names
multcompLetters(em_out)

plot(nnd_lmer_still)
qqnorm(resid(nnd_lmer_still))
qqline(resid(nnd_lmer_still))

ggplot(nnd_no_out, aes(Trial, NND, color = interaction(Ablation,Species)))+
  geom_point()+
  geom_line(aes(y = predict(nnd_lmer_still)))+
  theme_classic()

polar_no_out <- school_data %>% group_by(Ablation,Species) %>%
                              filter(!is.na(School_Polar)) %>%
                              filter(School_Polar >= median(School_Polar, nan.rm=T) - IQR(School_Polar,na.rm =T)*1.5 &
                                     School_Polar <= median(School_Polar, nan.rm=T) + IQR(School_Polar,na.rm =T)*1.5) %>%
                              ungroup()

#polar_lmer_still <- lm(School_Polar ~ Ablation*Species + Trial, data = school_data)
polar_lmer_still <- lme(School_Polar ~ Ablation*Species, 
                             random = ~1|Trial/Species,
                             correlation = corAR1(form = ~1|Trial/Species), 
                             data = polar_no_out)
polar_s_aov_me <- Anova(polar_lmer_still, type=c("III"))
em_out <- summary(emmeans(polar_lmer_still, pairwise ~ Ablation*Species))$contrasts$p.value
names(em_out) <- contrast_names
multcompLetters(em_out)

plot(polar_lmer_still)
qqnorm(resid(polar_lmer_still))
qqline(resid(polar_lmer_still))

speed_no_out <- school_data %>% group_by(Ablation,Species) %>%
                              filter(!is.na(School_Speed)) %>%
                              filter(School_Speed >= median(School_Speed, nan.rm=T) - IQR(School_Speed,na.rm =T)*1.5 &
                                     School_Speed <= median(School_Speed, nan.rm=T) + IQR(School_Speed,na.rm =T)*1.5) %>%
                              ungroup()

#speed_lmer_still <- lm(School_Speed ~ Ablation*Species + Trial, data = school_data)
speed_lmer_still <- lme(School_Speed ~ Ablation*Species, 
                             random = ~1|Trial/Species,
                             correlation = corAR1(form = ~1|Trial/Species), 
                             data = speed_no_out)
speed_s_aov_me <- Anova(speed_lmer_still, type=c("III"))
em_out <- summary(emmeans(speed_lmer_still, pairwise ~ Ablation*Species))$contrasts$p.value
names(em_out) <- contrast_names
multcompLetters(em_out)

plot(speed_lmer_still)
qqnorm(resid(speed_lmer_still))
qqline(resid(speed_lmer_still))

group_1_glm <- glmmTMB(Is_One ~ Ablation*Species*Group_Dist + ar1(as.factor(Tailbeat) + 0|Trial:Species), 
                             data = group_sum_data_1_binom, family = "binomial")
group_1_aov <- Anova(group_1_glm, type=c("III"))
emmeans(group_1_glm, pairwise ~ Ablation*Species | Group_Dist)
em_out <- summary(emmeans(group_1_glm, pairwise ~ Ablation*Species | Group_Dist))$contrasts$p.value
names(em_out) <- contrast_names
multcompLetters(em_out)

values_to_grab <- c(2,3,4)
values_to_grab_groups <- c(2,3,4,5,6,7,8)

glmm_school_stats_table <- tibble(Stat = c(rep("NND",3),rep("Polarization",3),rep("Speed",3),rep("Groups",7)),
       Condition = c(rep(c("Ablation","Species","Ablation x Species"), 3),
                     c("Ablation","Species","Group Distance",
                       "Ablation x Species","Ablation x Group Distance","Species x Group Distance",
                       "Ablation x Species x Group Distance")),
       DF = c(rep(c(rep(length(nnd_lmer_still$data$NND)-3,3)),times = 3),rep(length(nnd_lmer_still$data$NND)-3,7)),
       Chisq = round(c(nnd_s_aov_me$`Chisq`[values_to_grab],
                 polar_s_aov_me$`Chisq`[values_to_grab],
                 speed_s_aov_me$`Chisq`[values_to_grab],
                 group_1_aov$`Chisq`[values_to_grab_groups]),2),
       
       P_Val = round(c(nnd_s_aov_me$`Pr(>Chisq)`[values_to_grab],
                 polar_s_aov_me$`Pr(>Chisq)`[values_to_grab],
                 speed_s_aov_me$`Pr(>Chisq)`[values_to_grab],
                 group_1_aov$`Pr(>Chisq)`[values_to_grab_groups]),3),
       
       Is_Sig = P_Val < 0.05)

glmm_school_stats_table

saveRDS(glmm_school_stats_table,"Paper Tables/school_stats_table.RDS")
```

#### Within species comparison of ablation

```{r}

within_species_difference <- function(resp_var,base_formula, df, species){
  no_ab_form <- paste0(resp_var," ~ ",base_formula)
  ab_form <- paste0(resp_var," ~ Ablation+",base_formula)
  
  group_1_no_ab <- lme(formula(no_ab_form),
                        random = ~1|Trial,
                        correlation = corAR1(form = ~1|Trial),
                        data = df  %>% filter(Species == species))
  group_1_yes_ab <-  lme(formula(ab_form),
                        random = ~1|Trial,
                        correlation = corAR1(form = ~1|Trial),
                        data = df  %>% filter(Species == species))
  
  # group_1_no_ab <- lm(formula(no_ab_form), data = df %>% filter(Species == species))
  # group_1_yes_ab <- lm(formula(ab_form), data = df %>% filter(Species == species))
  
  best_model <- rownames(AIC(group_1_yes_ab,group_1_no_ab) %>% arrange(AIC))[1]
  print(best_model)
  
  if(best_model == "group_1_yes_ab"){
    BM = "With Ablation"
  } else{
    BM = "Without Ablation"
  }
  
  chi <- lrtest(group_1_yes_ab,group_1_no_ab)$Chisq[2]
  p_val <- lrtest(group_1_yes_ab,group_1_no_ab)$"Pr(>Chisq)"[2]
  
  return(tibble(Best_Model = BM, ChiSqr = chi, PVal = p_val))
}

within_species_difference_binom <- function(resp_var,base_formula, df, species){
  no_ab_form <- paste0(resp_var," ~ Group_Dist+",base_formula,"+ar1(as.factor(Tailbeat) + 0|Trial)")
  ab_form <- paste0(resp_var," ~ Ablation*Group_Dist+",base_formula,"+ar1(as.factor(Tailbeat) + 0|Trial)")
  
  group_1_no_ab <- glmmTMB(formula(no_ab_form), 
                             data = df %>% filter(Species == species), family = "binomial")
  group_1_yes_ab <-  glmmTMB(formula(ab_form), 
                             data = df %>% filter(Species == species), family = "binomial")
  
  # group_1_no_ab <- glm(formula(no_ab_form), data = df %>% filter(Species == species), family = "binomial")
  # group_1_yes_ab <- glm(formula(ab_form), data = df %>% filter(Species == species), family = "binomial")
  
  best_model <- rownames(AIC(group_1_yes_ab,group_1_no_ab) %>% arrange(AIC))[1]
  
  if(best_model == "group_1_yes_ab"){
    BM = "With Ablation"
  } else{
    BM = "Without Ablation"
  }
  
  chi <- lrtest(group_1_yes_ab,group_1_no_ab)$Chisq[2]
  p_val <- lrtest(group_1_yes_ab,group_1_no_ab)$"Pr(>Chisq)"[2]
  
  return(tibble(Best_Model = BM, ChiSqr = chi, PVal = p_val))
}

nnd_contrasts <- rbind(within_species_difference("NND","1",nnd_no_out,"Giant Danio"),
                   within_species_difference("NND","1",nnd_no_out,"Cherry Barb"),
                   within_species_difference("NND","1",nnd_no_out,"Neon Tetra"))

polar_contrasts <- rbind(within_species_difference("School_Polar","1",polar_no_out,"Giant Danio"),
                     within_species_difference("School_Polar","1",polar_no_out,"Cherry Barb"),
                     within_species_difference("School_Polar","1",polar_no_out,"Neon Tetra"))

speed_contrasts <- rbind(within_species_difference("School_Speed","1",speed_no_out,"Giant Danio"),
                     within_species_difference("School_Speed","1",speed_no_out,"Cherry Barb"),
                     within_species_difference("School_Speed","1",speed_no_out,"Neon Tetra"))

groups_contrasts <- rbind(within_species_difference("Is_One","1",group_sum_data_1_binom,"Giant Danio"),
                          within_species_difference("Is_One","1",group_sum_data_1_binom,"Cherry Barb"),
                          within_species_difference("Is_One","1",group_sum_data_1_binom,"Neon Tetra"))

school_ablation_stats_table <- tibble(Stat = c(rep("NND",3),rep("Polarization",3),rep("Speed",3),rep("Groups",3)),
       Species = rep(c("Giant Danio","Cherry Barb","Neon Tetra"), 4),
       # Best_Model = c(nnd_contrasts$Best_Model,polar_contrasts$Best_Model,
       #           speed_contrasts$Best_Model,groups_contrasts$Best_Model),
       X2 = round(c(nnd_contrasts$ChiSqr,polar_contrasts$ChiSqr,
                 speed_contrasts$ChiSqr,groups_contrasts$ChiSqr),2),
       P_Val = round(p.adjust(c(nnd_contrasts$PVal,polar_contrasts$PVal,
                 speed_contrasts$PVal,groups_contrasts$PVal), method = "holm"),3),
       Is_Sig = P_Val < 0.05)

school_ablation_stats_table

saveRDS(school_ablation_stats_table,"Paper Tables/species_comp_table.RDS")

```

### Neuromast Density

```{r}

neuromast_counts <- read.csv("Data/neuromast_counts.csv") %>%
                    dplyr::select(-c(x,y,survey.id)) %>%
                    separate(image, c("Fish","ID"), sep = "_") %>%
                    mutate(Fish = case_when(Fish == "GD" ~ "Giant Danio",
                                            Fish == "CB" ~ "Cherry Barb",
                                            Fish == "NT" ~ "Neon Tetra")) %>%
                    mutate(Fish = fct_relevel(Fish, c("Giant Danio","Cherry Barb", "Neon Tetra"))) %>%
                    mutate(ID = gsub(".jpg", "", ID),
                           All.Superficial = Superficial.Above.LL+Superficial.Below.LL+Superficial.Head+
                                             Superficial.LL.Scales+Superficial.Operculum+Superficial.Tailfin,
                           All.Superficial.Area = All.Superficial/Area,
                           Head.Canal.Neuromast.Length = Canal.Head/Length,
                           Canal.Neuromast.Length = (Canal.Neuromast-Canal.Head)/Length,
                           Head.Superficial.Area = (Superficial.Head+Superficial.Operculum)/Area,
                           Body.Superficial.Area = (Superficial.Above.LL+Superficial.Below.LL+
                                                      Superficial.LL.Scales++Superficial.Tailfin)/Area)
    
```

```{r}

# superfical_aov <- aov(All.Superficial.Area ~ Fish, data = neuromast_counts)
# superfical_tukey <- TukeyHSD(superfical_aov)

canal_head_aov <- aov(Head.Canal.Neuromast.Length ~ Fish, data = neuromast_counts)
canal_head_tukey <- TukeyHSD(canal_head_aov)
canal_head_tukey

canal_aov <- aov(Canal.Neuromast.Length ~ Fish, data = neuromast_counts)
canal_tukey <- TukeyHSD(canal_aov)
canal_tukey

head_superficial_aov <- aov(Head.Superficial.Area ~ Fish, data = neuromast_counts)
head_superficial_tukey <- TukeyHSD(head_superficial_aov)
head_superficial_tukey

body_superficial_aov <- aov(Body.Superficial.Area ~ Fish, data = neuromast_counts)
body_superficial_tukey <- TukeyHSD(body_superficial_aov)
body_superficial_tukey

```

## Power Analysis

```{r}
nnd_lm_full <- lm(NND ~ Ablation*Species + factor(Trial), data = school_data)
nnd_lm_red <- lm(NND ~ Species + factor(Trial), data = school_data)

AIC(nnd_lm_red, nnd_lm_full)

dr2 <- summary(nnd_lm_full)$adj.r.squared - summary(nnd_lm_red)$adj.r.squared

dr2
```


```{r}
pwrss.f.reg(r2 = dr2, 
            k = length(nnd_lm_red$coefficients), 
            m = length(nnd_lm_full$coefficients) - 
              length(nnd_lm_red$coefficients),
            alpha = 0.05, power = 0.8)
```


```{r}
polar_lm_full <- lm(School_Polar ~ Ablation*Species + factor(Trial), data = school_data)
polar_lm_red <- lm(School_Polar ~ Species + factor(Trial), data = school_data)

AIC(polar_lm_red, polar_lm_full)

dr2_polar <- summary(polar_lm_full)$adj.r.squared - summary(polar_lm_red)$adj.r.squared

dr2_polar
```


```{r}
pwrss.f.reg(r2 = dr2_polar, 
            k = length(polar_lm_red$coefficients), 
            m = length(polar_lm_full$coefficients) - 
              length(polar_lm_red$coefficients),
            alpha = 0.05, power = 0.8)
```


```{r}
speed_lm_full <- lm(School_Speed ~ Ablation*Species + factor(Trial), data = school_data)
speed_lm_red <- lm(School_Speed ~ Species + factor(Trial), data = school_data)

AIC(speed_lm_red, speed_lm_full)

dr2_speed <- summary(speed_lm_full)$adj.r.squared - summary(speed_lm_red)$adj.r.squared

dr2_speed
```


```{r}
pwrss.f.reg(r2 = dr2_speed, 
            k = length(speed_lm_red$coefficients), 
            m = length(speed_lm_full$coefficients) - 
              length(speed_lm_red$coefficients),
            alpha = 0.05, power = 0.8)
```

```{r}
pwrss.f.reg(r2 = 0.06, 
            k = 25, 
            m = 3,
            alpha = 0.05, power = 0.8)
```


```{r}
group_1_glm <- glm(Is_One ~ Ablation*Species*Group_Dist+factor(Trial), data = group_sum_data_1_binom, family = "binomial")
pwrss.z.logreg(p0 = 0.15, beta1 = -6.1244, r2.other.x = 0.20,
               alpha = 0.05, power = 0.80,
               dist = "normal")

```
