---
title: "Paper Figures and Text"
format: html
editor: visual
---

## Loading in the Libraries for Everything

```{r}
library(tidyverse)
library(ggplot2)
library(bbmle) #For ICtab
library(car)
library(ggpubr)
library(ggdist)
library(emmeans)
library(lme4)
library(multcompView)
library(pracma)
library(igraph)
library(MASS)
library(rstatix)

```


## Functions and Variables

```{r}
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}
round_any <- function(x, accuracy, f=round){f(x/ accuracy) * accuracy}

deg_ang_mean <- function(x){rad2deg(atan2(mean(sin(deg2rad(x))),mean(cos(deg2rad(x)))))}
rad_ang_mean <- function(x){atan2(mean(sin(x)),mean(cos(x)))}

fold_angle_0_360_to_0_180 <- function(x){abs(abs(x-180)-180)}

fold_angle_neg_180_180_to_neg_90_90 <- function(x){ifelse(x > 90,90-abs(90-x),ifelse(x < -90, -90+abs(-90-x), x))}

min_n <- function(x,n){sort(x)[1:n]}
max_n <- function(x,n){sort(x,decreasing = TRUE)[1:n]}

light_no_ab_color = "#9C9C9C"   #"#C62E65" #A1BAA4" #"#d4d7dd" 06D6A0
light_ab_color = "#f5ba9e"
dark_no_ab_color = "#5e94d4"
dark_ab_color = "#49A078"   #"#1E4371"
sim_color = "#777777"

flow_split_still = "#F59DE2"
flow_split_flow = "#5DD492"

dark_split_light = "#5e94d4"
dark_split_dark = "#011627"

tailbeat_len = 19

allowed_flow_type = c("Still Water","Flowing Water (2 BL/s)")

dot_binwidth = 0.02

text_size = 16
sig_text_size = 6

# for turning data
x_offset <- 1.95
y_offset <- 1.15
```

```{r}
get_n_groups <- function(HeadX, HeadY, HeadZ, gDist){
  
  HeadX <- na.omit(HeadX)
  HeadY <- na.omit(HeadY)
  HeadZ <- na.omit(HeadZ)
  
  #Need at least 5 fish for this
  if(length(HeadX) < 5){
    return(NA)
  }
  
  A <- matrix(c(HeadX, HeadY, HeadZ), nrow =  length(HeadX), ncol = 3)
  B <- matrix(c(HeadX, HeadY,HeadZ), nrow =  length(HeadX), ncol = 3)
  
  X <- (distmat(A, B) <= max(gDist))
  
  #print(X)
  
  g <- graph_from_adjacency_matrix(X, mode = "lower", weighted = "weight")
  
  return(components(g)$no)
}
```



```{r}

all_fish_comp <- rbind(read.csv("Data/Fish_Comp_Values_3D_Giant Danio.csv"),
                       read.csv("Data/Fish_Comp_Values_3D_Cherry Barb.csv"),
                       read.csv("Data/Fish_Comp_Values_3D_Neon Tetra.csv"))

write.csv(all_fish_comp,"Data/Fish_Comp_Values_3D.csv")

all_fish_comp <- rbind(read.csv("Data/Fish_School_Values_3D_Giant Danio.csv"),
                       read.csv("Data/Fish_School_Values_3D_Cherry Barb.csv"),
                       read.csv("Data/Fish_School_Values_3D_Neon Tetra.csv"))

write.csv(all_fish_comp,"Data/Fish_School_Values_3D.csv")

all_fish_comp <- rbind(read.csv("Data/Fish_Raw_Points_3D_Giant Danio.csv"),
                       read.csv("Data/Fish_Raw_Points_3D_Cherry Barb.csv"),
                       read.csv("Data/Fish_Raw_Points_3D_Neon Tetra.csv"))

write.csv(all_fish_comp,"Data/Fish_Raw_Points_3D.csv")

```

## School Summary Stats

```{r}
school_data <- read.csv("Data/Fish_School_Values_3D.csv")

#school_data <- na.omit(school_data)

school_data <- school_data %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           filter(School_Speed <= 5) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), 
                                  Darkness = factor(Darkness), Species = factor(Species)) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Species = fct_relevel(Species, c("Giant Danio","Cherry Barb","Neon Tetra"))) %>%
                           mutate(Ablation_Species = factor(paste(Ablation,Species,sep="/n"))) %>%
                            
                           # ### Used to remove every third point to reduce autocorrelation
                           mutate(Date = paste(Year,Month,Day,sep="_"),
                                  Date_Trial = paste(Year,Month,Day,Trial,sep="_")) %>%
                           group_by(Date_Trial) %>%
                           filter(row_number() %% 3 == 1) %>%
                           ungroup() %>%
                           # ###
                          
                           group_by(Ablation_Species) %>%
                           mutate(NND_Mean_Val = mean(NND,na.rm = T), NND_SD_Val = sd(NND,na.rm = T),
                                  Polar_Mean_Val = mean(School_Polar,na.rm = T), Polar_SD_Val = sd(School_Polar,na.rm = T),
                                  Speed_Mean_Val = mean(School_Speed,na.rm = T), Speed_SD_Val = sd(School_Speed,na.rm = T),
                                  Groups_Mean_Val = mean(Groups,na.rm = T), Groups_SD_Val = sd(Groups,na.rm = T),
                                  Mean_Groups_Mean_Val = mean(Mean_Groups,na.rm = T), Mean_Groups_SD_Val = sd(Mean_Groups,na.rm = T)) %>%
                           ungroup()
```



### NND Plot

```{r}

nnd_label_df <- tibble(Species = unique(school_data$Species),
                  Ablation = rep("No Ablation", 3),
                  group1 = rep("No Ablation", 3),
                  group2 = rep("Ablated", 3),
                  p.signif = c("ns","**","*"))

nnd_still <- ggplot()+
  facet_wrap(~Species)+
  stat_pvalue_manual(nnd_label_df, y.position = 20, step.increase = 0,
                     label = "p.signif", hide.ns = TRUE, bracket.size = 0.75, size = 7)+
  stat_dots(school_data, mapping = aes(x = Ablation, y = NND, color = Ablation, fill = Ablation),
            side = "both", binwidth = unit(dot_binwidth, "npc"))+
  geom_point(school_data, mapping = aes(x = Ablation, y = NND_Mean_Val), size = 5, color = "Black")+
  geom_errorbar(school_data, mapping = aes(x = Ablation,ymin=NND_Mean_Val-NND_SD_Val, ymax=NND_Mean_Val+NND_SD_Val),
                width=.2, color = "Black")+
    geom_line(school_data, mapping = aes(x = Ablation, y = NND_Mean_Val, group = 1), size = 1, color = "Black", linetype = "dashed")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  xlab("") +
  ylab("School NND (cm)") +
  theme_light()+ 
  ylim(0,21)+
  theme(legend.position = "none") +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

nnd_still
```

### Polarization

```{r}

polar_label_df <- tibble(Species = unique(school_data$Species),
                  Ablation = rep("No Ablation", 3),
                  group1 = rep("No Ablation", 3),
                  group2 = rep("Ablated", 3),
                  p.signif = c("ns","*","****"))

polar_still <- ggplot()+
  facet_wrap(~Species)+
  stat_pvalue_manual(polar_label_df, y.position = 0.98, step.increase = 0,
                     label = "p.signif", hide.ns = TRUE, bracket.size = 0.75, size = 7)+
  stat_dots(school_data, mapping = aes(x = Ablation, y = School_Polar, color = Ablation, fill = Ablation),
            side = "both", binwidth = unit(dot_binwidth, "npc"))+
  geom_point(school_data, mapping = aes(x = Ablation, y = Polar_Mean_Val), size = 5, color = "Black")+
  geom_errorbar(school_data, mapping = aes(x = Ablation,ymin=Polar_Mean_Val-Polar_SD_Val, ymax=Polar_Mean_Val+Polar_SD_Val),
                width=.2, color = "Black")+
  geom_line(school_data, mapping = aes(x = Ablation, y = Polar_Mean_Val, group = 1), size = 1, color = "Black", linetype = "dashed")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  xlab("") +
  ylab("Polarization") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,1)+
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

polar_still
```

### Speed

```{r}

speed_label_df <- tibble(Species = unique(school_data$Species),
                  Ablation = rep("No Ablation", 3),
                  group1 = rep("No Ablation", 3),
                  group2 = rep("Ablated", 3),
                  p.signif = c("ns","****","****"))

speed_still <- ggplot()+
  facet_wrap(~Species)+
  stat_pvalue_manual(speed_label_df, y.position = 6, step.increase = 0,
                     label = "p.signif", hide.ns = TRUE, bracket.size = 0.75, size = 7)+
  stat_dots(school_data, mapping = aes(x = Ablation, y = School_Speed, color = Ablation, fill = Ablation),
            side = "both", binwidth = unit(dot_binwidth, "npc"))+
  geom_point(school_data, mapping = aes(x = Ablation, y = Speed_Mean_Val), size = 5, color = "Black")+
  geom_line(school_data, mapping = aes(x = Ablation, y = Speed_Mean_Val, group = 1), size = 1, color = "Black", linetype = "dashed")+
  geom_errorbar(school_data, mapping = aes(x = Ablation,ymin=Speed_Mean_Val-Speed_SD_Val, ymax=Speed_Mean_Val+Speed_SD_Val),
                width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  xlab("") +
  ylab("Mean Speed of Fish (BL/s)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,7)+
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

speed_still
```
### Now we combine them

```{r}
school_stats_mega_plot <- ggarrange(nnd_still, 
                                    polar_still,
                                    speed_still,
          labels = c("A", "B", "C", "D"),
          ncol = 1, nrow = 3)  

school_stats_mega_plot

ggsave("Paper Figures/Figure 2.png", school_stats_mega_plot, width = 10, height = 20)
```

### Number of Groups

```{r}
all_fish_comp <- read.csv("Data/Fish_Raw_Points_3D.csv") %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Species = fct_relevel(Species, c("Giant Danio","Cherry Barb", "Neon Tetra"))) %>%
                           mutate(Ablation_Species = factor(paste(Ablation,Species,sep="/n")))

# #Uncomment with new data, takes a long time to run just for graph edits
# all_fish_comp_groups <- all_fish_comp %>% expand_grid(Group_Dist = seq(5,25,1)) %>%
#                                           group_by(Species, Ablation, Ablation_Species,
#                                                    Year, Month, Day, Trial, Tailbeat, Frame, Group_Dist) %>%
#                                           summarize(n_groups = get_n_groups(Head_X,Head_Y,Head_Z,Group_Dist)) %>%
#                                           ungroup() %>%
#                                           group_by(Species, Ablation, Ablation_Species,
#                                                    Year, Month, Day, Trial, Tailbeat, Group_Dist) %>%
#                                           summarize(Groups = as.integer(mean(n_groups, na.rm = TRUE))) %>%
#                                           ungroup() %>%
# 
#                                            # ### Used to remove every third point to reduce autocorrelation
#                                            filter(Tailbeat %% 3 == 1) %>%
#                                           na.omit()
# saveRDS(all_fish_comp_groups, "all_fish_comp_groups.RDS")

all_fish_comp_groups <- readRDS("all_fish_comp_groups.RDS")

group_sum_data <- all_fish_comp_groups %>% filter(Groups > 0) %>% group_by(Ablation, Species, Groups, Group_Dist) %>%
                            summarise(count = n()) %>%
                            ungroup() %>%
                            mutate(Groups = as.factor(Groups),
                                   Groups = fct_rev(Groups))

group_sum_data_1 <- group_sum_data %>% complete(Species,Ablation,Group_Dist,Groups,fill=list(count=0)) %>%
                                       group_by(Species,Ablation,Group_Dist) %>%
                                       mutate(total = sum(count),
                                              Percent_Group = count / total) %>%
                                       ungroup() %>%
                                       filter(Groups == 1)

group_sum_data_1_binom <- all_fish_comp_groups %>% mutate(Is_One = ifelse(Groups == 1, 1, 0))

group_1_glm <- glm(Is_One ~ Ablation*Species*Group_Dist, data = group_sum_data_1_binom, family = "binomial")
group_1_aov <- Anova(group_1_glm, type=c("III"))
group_1_aov

group_still <- ggplot(group_sum_data_1, aes(Group_Dist, Percent_Group, color = Ablation))+
  facet_wrap(~Species)+
  geom_point()+
  geom_line(data = group_sum_data_1_binom, aes(x = Group_Dist, y = predict(group_1_glm, type="response")), size = 1) + 
  scale_color_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color,dark_ab_color)) +
  theme(legend.position = "none")+
  xlab("Maximum Distance to Connect Group (cm)")+
  ylab("Proportion of Time in 1 Group")+
  scale_y_continuous(breaks = seq(0,1,0.25), limits = c(0,1))+
  theme_light()+
  #theme(legend.position = "none") +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.x = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))

group_still

ggsave("Paper Figures/Subgroup_Graphs.png", group_still, width = 10, height = 7)

```


### Neuromast density

```{r}

neuromast_counts <- read.csv("Data/neuromast_counts.csv") %>%
                    dplyr::select(-c(x,y,survey.id)) %>%
                    separate(image, c("Fish","ID"), sep = "_") %>%
                    mutate(Fish = case_when(Fish == "GD" ~ "Giant Danio",
                                            Fish == "CB" ~ "Cherry Barb",
                                            Fish == "NT" ~ "Neon Tetra")) %>%
                    mutate(Fish = fct_relevel(Fish, c("Giant Danio","Cherry Barb", "Neon Tetra"))) %>%
                    mutate(ID = gsub(".jpg", "", ID),
                           All.Superficial = Superficial.Above.LL+Superficial.Below.LL+Superficial.Head+
                                             Superficial.LL.Scales+Superficial.Operculum+Superficial.Tailfin,
                           All.Superficial.Area = All.Superficial/Area,
                           Canal.Neuromast.Area = Canal.Neuromast/Area,
                           Head.Superficial.Area = (Superficial.Head+Superficial.Operculum)/Area,
                           Body.Superficial.Area = (Superficial.Above.LL+Superficial.Below.LL+
                                                      Superficial.LL.Scales++Superficial.Tailfin)/Area)
    
```


```{r}

neuromast_per_area <- neuromast_counts %>% group_by(Fish) %>%
                                          summarise(All.Superficial.Area = All.Superficial.Area,
                                                    All.Superficial.Area.Mean = mean(All.Superficial.Area),
                                                    All.Superficial.Area.SD = sd(All.Superficial.Area),
                                                    Canal.Neuromast.Area = Canal.Neuromast.Area,
                                                    Canal.Neuromast.Area.Mean = mean(Canal.Neuromast.Area),
                                                    Canal.Neuromast.Area.SD = sd(Canal.Neuromast.Area),
                                                    Head.Superficial.Area = Head.Superficial.Area,
                                                    Head.Superficial.Area.Mean = mean(Head.Superficial.Area),
                                                    Head.Superficial.Area.SD = sd(Head.Superficial.Area),
                                                    Body.Superficial.Area = Body.Superficial.Area,
                                                    Body.Superficial.Area.Mean = mean(Body.Superficial.Area),
                                                    Body.Superficial.Area.SD = sd(Body.Superficial.Area))

my_comparisons = list(c("Cherry Barb", "Giant Danio"),c("Cherry Barb", "Neon Tetra"),c("Giant Danio", "Neon Tetra"))

total_super <- ggplot(neuromast_per_area, aes(x = Fish, y = All.Superficial.Area, color = Fish, fill = Fish))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = All.Superficial.Area.Mean), color = "black")+
  geom_errorbar(aes(ymin=All.Superficial.Area.Mean-All.Superficial.Area.SD,
                    ymax=All.Superficial.Area.Mean+All.Superficial.Area.SD), width=.2, color = "black")+
  ylab("Superficial Neuromasts per cm^2")+
  theme_classic()+
  xlab("")+
  ylim(0,2000)+
  stat_compare_means(comparisons = my_comparisons, method = "t.test", label.y = c(1500,1700,1900),
                     label = "p.signif", hide.ns = TRUE, bracket.size = 0.75, size = 7) +
  theme(legend.position = "none") +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.x = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))

total_canal <- ggplot(neuromast_per_area, aes(x = Fish, y = Canal.Neuromast.Area, color = Fish, fill = Fish))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Canal.Neuromast.Area.Mean), color = "black")+
  geom_errorbar(aes(ymin=Canal.Neuromast.Area.Mean-Canal.Neuromast.Area.SD,
                    ymax=Canal.Neuromast.Area.Mean+Canal.Neuromast.Area.SD), width=.2, color = "black")+
  ylab("Canal Neuromasts per cm^2")+
  theme_classic()+
  xlab("")+
  ylim(0,40)+
  theme(legend.position = "none") +
  stat_compare_means(comparisons = list(c("Cherry Barb", "Neon Tetra"),
                                        c("Cherry Barb", "Giant Danio")), bracket.size = 0.75, size = 7,
                     method = "t.test", label = "p.signif", hide.ns = TRUE, label.y = c(33,37)) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.x = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))

head_super <- ggplot(neuromast_per_area, aes(x = Fish, y = Head.Superficial.Area, color = Fish, fill = Fish))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Head.Superficial.Area.Mean), color = "black")+
  geom_errorbar(aes(ymin=Head.Superficial.Area.Mean-Head.Superficial.Area.SD,
                    ymax=Head.Superficial.Area.Mean+Head.Superficial.Area.SD), width=.2, color = "black")+
  ylab("Head Superficial Neuromasts per cm^2")+
  theme_classic()+
  xlab("")+
  ylim(0,600)+
  theme(legend.position = "none") +
  stat_compare_means(comparisons = my_comparisons, bracket.size = 0.75, size = 7, label.y = c(400,475,550),
                     method = "t.test", label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.x = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))

body_super <- ggplot(neuromast_per_area, aes(x = Fish, y = Body.Superficial.Area, color = Fish, fill = Fish))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Body.Superficial.Area.Mean), color = "black")+
  geom_errorbar(aes(ymin=Body.Superficial.Area.Mean-Body.Superficial.Area.SD,
                    ymax=Body.Superficial.Area.Mean+Body.Superficial.Area.SD), width=.2, color = "black")+
  ylab("Trunk Superficial Neuromasts per cm^2")+
  theme_classic()+
  xlab("")+
  ylim(0,1500)+
  theme(legend.position = "none") +
  stat_compare_means(comparisons = my_comparisons, bracket.size = 0.75, size = 7
                     , method = "t.test", label = "p.signif", hide.ns = TRUE, label.y = c(1000,1200,1400)) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.x = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))


neuromast_mega_plot <- ggarrange(total_super, 
                                    total_canal,
                                    head_super,
                                    body_super,
          labels = c("A", "B", "C", "D"),
          ncol = 2, nrow = 2)  

neuromast_mega_plot

ggsave("Paper Figures/neuromast_figures.png", neuromast_mega_plot, width = 10, height = 10)


```